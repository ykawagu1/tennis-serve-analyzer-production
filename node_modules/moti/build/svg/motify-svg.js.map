{"version":3,"file":"motify-svg.js","sourceRoot":"","sources":["../../src/svg/motify-svg.tsx"],"names":[],"mappings":";AAAA,OAAc,EAAE,UAAU,EAAE,MAAM,OAAO,CAAA;AACzC,OAAO,QAAQ,MAAM,yBAAyB,CAAA;AAG9C,OAAO,EAAE,SAAS,EAAE,MAAM,oBAAoB,CAAA;AA0B9C,MAAM,UAAU,SAAS,CAIvB,yBAA4B;IAC5B,MAAM,cAAc,GAAG,GAAG,EAAE;QAC1B,MAAM,iBAAiB,GAAG,QAAQ,CAAC,uBAAuB,CACxD,yBAAyB,CAC1B,CAAA;QACD,MAAM,QAAQ,GAAG,UAAU,CAGzB,SAAS,IAAI,CAAC,KAAK,EAAE,GAAG;YACxB,MAAM,QAAQ,GAAG,SAAS,CAAU,KAAK,CAAC,CAAA;YAE1C,IAAI,KAAK,CAAC,aAAa,EAAE,CAAC;gBACxB,OAAO,CAAC,IAAI,CACV,mJAAmJ,CACpJ,CAAA;YACH,CAAC;YAED,OAAO,CACL,KAAC,iBAAiB,OACZ,KAAK,EACT,aAAa,EAAE,QAAQ,CAAC,KAAK;gBAC7B,aAAa;gBACb,GAAG,EAAE,GAAG,GACR,CACH,CAAA;QACH,CAAC,CAAC,CAAA;QAEF,QAAQ,CAAC,WAAW,GAAG,WACrB,yBAAyB,CAAC,WAAW;YACrC,yBAAyB,CAAC,IAAI;YAC9B,QACF,EAAE,CAAA;QAEF,OAAO,QAAQ,CAAA;IACjB,CAAC,CAAA;IAED,OAAO,cAAc,CAAA;AACvB,CAAC","sourcesContent":["import React, { forwardRef } from 'react'\nimport Animated from 'react-native-reanimated'\n\nimport { ExcludeFunctionKeys, MotiProps } from '../core/types'\nimport { useMotify } from '../core/use-motify'\n\ntype AdditionalProps = {\n  children?: React.ReactNode\n  /**\n   * Animated props are not allowed with a Moti SVG component, since they will be overridden.\n   *\n   * Please use the `animate` prop instead. You can pass a derived value if needed:\n   *\n   * ```tsx\n   * const MotiRect = motifySvg(Rect)()\n   *\n   * export const Example = () => {\n   *    const animate = useDerivedValue(() => {\n   *       return {\n   *        width: 100,\n   *        height: 100,\n   *      }\n   *    })\n   *   return <MotiRect animate={animate} />\n   * }\n   * ```\n   */\n  animatedProps?: never\n}\n\nexport function motifySvg<\n  C extends React.ComponentClass<any>,\n  Props = React.ComponentPropsWithoutRef<C>,\n  Animate = ExcludeFunctionKeys<Omit<Props, 'children'>>\n>(ComponentWithoutAnimation: C) {\n  const withAnimations = () => {\n    const AnimatedComponent = Animated.createAnimatedComponent(\n      ComponentWithoutAnimation\n    )\n    const Motified = forwardRef<\n      React.RefAttributes<React.ElementRef<C>>,\n      Props & MotiProps<Animate> & AdditionalProps\n    >(function Moti(props, ref) {\n      const animated = useMotify<Animate>(props)\n\n      if (props.animatedProps) {\n        console.warn(\n          `Moti: You passed animatedProps to a Moti SVG component. This will do nothing. You should use the animate prop directly. This will have no effect.`\n        )\n      }\n\n      return (\n        <AnimatedComponent\n          {...props}\n          animatedProps={animated.style}\n          // @ts-ignore\n          ref={ref}\n        />\n      )\n    })\n\n    Motified.displayName = `MotiSvg.${\n      ComponentWithoutAnimation.displayName ||\n      ComponentWithoutAnimation.name ||\n      'NoName'\n    }`\n\n    return Motified\n  }\n\n  return withAnimations\n}\n"]}