{"version":3,"file":"merge.js","sourceRoot":"","sources":["../../../src/interactions/pressable/merge.ts"],"names":[],"mappings":"AAEA,MAAM,UAAU,gBAAgB,CAC9B,WAA0C,EAC1C,IAAwB,EACxB,KAAyB;IAEzB,SAAS,CAAA;IAET,IAAI,KAAK,GAAG,EAAE,CAAA;IACd,KAAK,MAAM,OAAO,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,CAAC;QACpC,IAAI,OAAO,EAAE,CAAC;YACZ,IAAI,OAAO,OAAO,KAAK,UAAU,EAAE,CAAC;gBAClC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,OAAO,CAAC,WAAW,CAAC,CAAC,CAAA;YACpD,CAAC;iBAAM,CAAC;gBACN,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,OAAO,CAAC,CAAA;YACvC,CAAC;QACH,CAAC;IACH,CAAC;IAED,OAAO,KAAK,CAAA;AACd,CAAC","sourcesContent":["import type { MotiPressableInteractionState, MotiPressableProp } from './types'\n\nexport function mergeAnimateProp(\n  interaction: MotiPressableInteractionState,\n  prop?: MotiPressableProp,\n  extra?: MotiPressableProp\n) {\n  'worklet'\n\n  let final = {}\n  for (const animate of [prop, extra]) {\n    if (animate) {\n      if (typeof animate === 'function') {\n        final = Object.assign(final, animate(interaction))\n      } else {\n        final = Object.assign(final, animate)\n      }\n    }\n  }\n\n  return final\n}\n"]}